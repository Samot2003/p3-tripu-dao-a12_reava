@startuml

title __MODEL's Class Diagram__\n

  namespace ub.edu.model {
    class ub.edu.model.Comarca {
        - nom : String
        + Comarca()
        + getNom()
        + setNom()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.EstadistiquesIndividuals {
        - punts : int
        + EstadistiquesIndividuals()
        + addPunts()
        + getEstadistiques()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.Grup {
        - llistaGrup : List<Persona>
        - nomGrup : String
        + Grup()
        + actualitzarRanking()
        + addGrup()
        + getNomGrup()
        + getPersona()
        + getRanking()
        + marxarGrup()
        + setNomGrup()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.Localitat {
        ~ nom : String
        + Localitat()
        + getNom()
        + setNom()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.Persona {
        - nom : String
        - pwd : String
        + Persona()
        + addPunts()
        + getEstadistiques()
        + getName()
        + getPwd()
        + getRutaActual()
        + setName()
        + setPwd()
        + setRutaActual()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.PuntDeControl {
        - ID : String
        + PuntDeControl()
        + getID()
        + getUbicacio()
        + getValoracio()
        + setValoracio()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.RankingGrup {
        - ranking : String
        + RankingGrup()
        + actualitzarRankingGrup()
        + mostrarRanking()
        + prova()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.Ruta {
        - comarques : Set<Comarca>
        - dataCreacio : LocalDate
        - durada : int
        - localitats : Set<Localitat>
        - nom : String
        - tramTracks : ArrayList<TramTrack>
        - transports : Set<Transport>
        + Ruta()
        + Ruta()
        + acabarRuta()
        + acabarTramActual()
        + addComarca()
        + addLocalitat()
        + addTram()
        + addTransport()
        + containsComarca()
        + containsLocalitat()
        + containsTransport()
        + getComarques()
        + getDataCreacio()
        + getDurada()
        + getEstatRuta()
        + getEstatTramActual()
        + getLlistaTramTracks()
        + getNom()
        + getTramActual()
        + iniciarRuta()
        + setDataCreacio()
        + setDurada()
        + setNom()
        + setTramActual()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.Tram {
        ~ ID : String
        + Tram()
        + cambiarEstat()
        + getEstat()
        + getID()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.TramTrack {
        - desnivellNegatiu : int
        - desnivellPositiu : int
        - distancia : int
        - duracioEstimada : float
        - puntsDeControl : ArrayList<PuntDeControl>
        + TramTrack()
        + addPuntDeControl()
        + getDesnivellNegatiu()
        + getDesnivellPositiu()
        + getDistancia()
        + getDuracioEstimada()
        + getPuntDeControlByID()
        + getPuntsDeControl()
        + getPuntsDeControlValorats()
        + setDesnivellNegatiu()
        + setDesnivellPositiu()
        + setDistancia()
        + setDuracioEstimada()
        + setEstatTramTrack()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.TripUB {
        {static} - uniqueIstance : TripUB
        + acabarRuta()
        + acabarTrackRutaActual()
        + actualitzarRankingGrup()
        + actualitzarRankings()
        + addMembreGrup()
        + addPuntsToPersona()
        + afegirComarca()
        + afegirLocalitat()
        + afegirPuntDeControl()
        + afegirRuta()
        + afegirTransport()
        + cercaRutesPerComarca()
        + cercaRutesPerLocalitat()
        + cercaRutesPerTransport()
        + cercarRutesPerTempsDeDurada()
        + crearGrup()
        + findPersona()
        + getAllTramTracks()
        {static} + getInstance()
        + getRankingGrup()
        + getUserInfo()
        + iniciarRuta()
        + iniciarTrackRutaActual()
        + isMail()
        + isPasswordSegur()
        + llistarCatalegRutesPerDurada()
        + llistarCatalegRutesPerNom()
        + llistarPuntsDePasRutaActual()
        + loguejarPersona()
        + marxarGrup()
        + recuperarContrassenya()
        + validatePassword()
        + validateRegisterPersona()
        + validateRegistrePersona()
        + validateUsername()
        + valorarPuntsDePas()
        - TripUB()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.Ubicacio {
        - altura : float
        - latitud : float
        - longitud : float
        + Ubicacio()
        + compareAltura()
        + compareDistance()
        + getAltura()
        + getLatitud()
        + getLongitud()
    }
  }
  

  namespace ub.edu.model {
    class ub.edu.model.XarxaPersones {
        - llista : List<Persona>
        + XarxaPersones()
        + find()
        + getLlista()
    }
  }
  

  ub.edu.model.Grup o-- ub.edu.model.RankingGrup : rankingGrup
  ub.edu.model.Persona o-- ub.edu.model.EstadistiquesIndividuals : estadistiques
  ub.edu.model.Persona o-- ub.edu.model.Ruta : rutaActual
  ub.edu.model.Persona o-- ub.edu.model.Ubicacio : ubicacio
  ub.edu.model.PuntDeControl o-- ub.edu.model.Ubicacio : ubicacio
  ub.edu.model.PuntDeControl o-- ub.edu.model.ValoracioStrategy.Valoracio : valoracio
  ub.edu.model.Ruta o-- ub.edu.model.Estat.Estat : estat
  ub.edu.model.Ruta o-- ub.edu.model.TramTrack : tramActual
  ub.edu.model.Tram o-- ub.edu.model.Estat.Estat : estat
  ub.edu.model.TramTrack -up-|> ub.edu.model.Tram
  ub.edu.model.TripUB o-- ub.edu.model.Facana.FacanaData : data
  ub.edu.model.TripUB o-- ub.edu.model.Facana.FacanaUser : user


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
